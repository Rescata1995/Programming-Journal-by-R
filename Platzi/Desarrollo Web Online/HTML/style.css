*{
    box-sizing: border-box;
}

body {
    font-family: 'Source Sans Pro', sans-serif, Arial;
}

/* Se colocan tres fuentes para respaldar sobre una en caso que no se tenga y así; si Arial no está dentro de mi sistema, entonces coloca Helvetica y, si Helvetica tampoco está, me coloca una Sans-serif  */

h1,
h2,
h3,
h4,
h5,
h6{
    font-family: 'Fjalla One', sans-serif;
    font-weight: normal;
    /* font-style: italic; */
}

/* Para colocar un mismo estilo a diferentes selectores que son completamente independientes y ninguno se contiene entre sí, es necesario hacer separaciones por coma (como lo hicimos más arriba); en cambio, cuando estamos hablando de selectores descendientes; es decir, donde se quiere afectar sobre una etiqueta que está siendo contenida por otra y ambas están siendo llamadas en CSS... sería algo así:

body h1{
    ------
}
*/

/*
La propiedad "font-weight" define el tipo de peso de fuente; donde el valor "100" nos refleja el tipo de fuente más delgada posible y el valor "900" nos refleja el tipo de fuente más gruesa posible. 400 o "normal" es un valor estandar. 600 o "bold" es un valor un poco más grueso que lo estandarizado.

La propiedad "font-style" define el estilo de la fuente, si deseas que la fuente sea cursiva o en  negrilla, etc. Le da formato al texto.
*/

h1{
    font-size: 40px;
    line-height: 1.5em;
    letter-spacing: -.2px; 
    color: white;

    /* La propiedad "font-size" define el tamaño de la fuente.

    El tamaño de la fuente, por lo general, viene configurado por defecto por el navegador; en este caso, por ejemplo, ya las etiquetas de tipo "H1" vienen con una configuración predeterminada de tamaño asignada por el navegador; dicho eso, en ese caso, toca "inspeccionar elementos" para conocer el tamaño original de fuente asignado para "H1" por el navegador.
    */

    /* La propiedad "line-height" define el "alto de línea"; es decir, la distancia que hay entre una línea de texto y la línea de texto que le sigue inmediatamente, la que está por debajo. Esta propiedad puede recibir un valor en muchas unidades de medida; sin embargo, usaremos pixeles.

    Por lo general, siempre será una buena referencia considerar un "line-height" (alto de línea) equivalente, por lo menos, al tamaño de la fuente, que se encuentra configurando, dentro del selector.

    La propiedad "letter-spacing" es la que define la separación que haya entre cada una de las letras. Un valor bastante bien estandarizado es: "-.2px" (un 20% de un pixel menos).

    Dato de interés: la unidad de medida "1em" o "1" se refiere a un tamaño del 100% sobre la base del tamaño de la fuente; "2em" o "2" sería, entonces, un tamaño del 200% sobre la base del tamaño de la misma fuente en cuestión. De hecho, podríamos definir como valor, dentro de "line-height", "100%",... y sería lo mismo que decir: "1em" o "1".

    Existe otra propiedad que quizas le guste considerar más adelante: "text-transform", esta propiedad asume valores para determinar la configuración de mayusculas y minusculas en el texto del selector ocupado. Por ejemplo, el valor "capitalize" lo que hace es que todas las palabras, del texto del selector manipulado, comiencen en mayuscula. Otro valor podría ser "uppercase", el cual, coloca todas las letras en mayusculas; lo contrario lo hace "lowercase". Esta propiedad es recomendable usarla siempre, toda vez, que requiera escribir algo totalmente en mayusculas o en minusculas; para un botón, por ejemplo. Es de mal gusto escribir en su propio documento HTML todo en MAYUSCULAS (se ve grosero).

    Otra propiedad interesante sería "text-decoration", que nos permite darle formato al texto, con valores como: "underline", "dashed", "unset"; y también color, con valores como: "red", "blue",... a nuestro texto.
    */
}

/* Si una fuente tiene más de dos palabras, debería encerrarse entre comillas simples */

/* Adicionalmente, podemos tener a nuestra disposición una mayor variedad de fuentes bajadas desde la propia internet, siga el siguiente recurso: https://fonts.google.com/
*/

h1 strong{
    /* color azul, con algo de "celeste" */
    color: #025fff;
}

.hero{
    height: 310px;
    /* background-color: red; */

    /* Ahora, si deseamos poner una imagen de fondo, a un selector, por medio de CSS, lo podemos hacer con la propiedad: "background-image"; en esta ocasión, será complementada el atributo "url" para poder ir a la ubicación de la imagen y poder importarla. */

    background-image: url('./images/piscina.jpg');

    /* Ahora, con "background-size" podemos definir las medidas de la imagen colocada como fondo; de tal manera que, el primer (1er) parametro que se le pase como valor sería el correspondiente al ancho (width) de la imagen; y, adicionalmente, el segundo (2do) parametro pasado como valor sería el correspondiente al alto (height). */

    background-size: 700px 100%;

    /* como el ancho del navegador es demasiado ancho para la imagen (1425px), no se vería esteticamente bien que, en un 100%, sea ocupado dicho espacio para toda la imagen en cuestión; por lo que, optamos colocar una medida exacta de "300px" (un ancho relativamente prudente); en cambio, la altura disponible para el selector ".hero"; es decir, donde estamos colocando la imagen en cuestión, es de "300px"; por lo que, en ese caso, sí que no es mala idea aprovechar en un 100% todo ese espacio (además que se corresponde, con exactitud, con la medida establecida para el ancho); en consecuencia, hemos definido ese valor con un "100%". Dando como resultado final una imagen cuadrada de 300px * 300px. 
    
    Sin embargo, como la imagen no ocupa realmente todo el ancho del navegador (300px ante 1425), se multiplicará instantaneamente de forma horizontal hasta que lo cubra. ¿Cómo solucionamos esto si nuestra intención es dejar una sola toma de foto y que no se repita? Pues bien, con la propiedad-valor "background-repeat: no-repeat".
    */

    background-repeat: no-repeat;

    /* Ahora nos interesa darle una mejor posición a nuestra imagen, eso sería con la propiedad: "background-position". A "background-position", al igual, se le pasan dos parametros, que son: "background-position: eje x & eje y". 
    Pero, si por ejemplo, queremos sólo manipular el eje de las x, sería: "background-position-x" & para el eje de las y, sería: "background-position-y". Nos interesa sólo el eje de las x. Veamos.
    */

    background-position-x: right;

    /* La key-word value "right" lo que hizo fue colocarme la imagen en el lado más extremo hacía la derecha. El valor "left" hace lo propio, pero hacia la izquierda.
    */

    /* Por último, fondo en negro */
    background-color: #060606;
}

/* Lo que estamos haciendo en "hero" es solapar, por medio del contenido textual del "header" principal, nuestra imagen de presentación inicial (no el logo, no confundir); de tal manera que, ambas, estén posicionadas bajo un mismo marco de altura; entonces, le quitamos altura a la imagen para que el contenido textual "suba" y se sobreponga a la imagen misma (la "solape"): así el elemento inmediatamente ulterior a uno puede solapar al otro: esta es la dinamica que se aplica para jugar, dentro de un mismo espacio disponible, con un contenido textual y un contenido embebido.
*/

.project{

    /* Demostración de diferentes valores que puede asumir cada borde en una división: medida, tipo o formato y color: */

    /* border-top: 10px solid red;
    border-right: 10px solid green;
    border-left: 10px solid orange;
    border-bottom: 10px solid pink; */

    /* border-color: red; */

    /* un color rojo para todos los bordes con "border-color"; sin embargo, para que sea visualizable este color, debemos hacer uso de la propiedad: "border-width", tal que así: 
    */

    /* border-width: 15px; */

    /* También haría falta definir el estilo del borde con "border-style" */

    /* border-style: solid; */

    /* Ahora bien, si por alguna razón se le olvida definir el color del borde, el borde asumirá el color del contenido textual que está cubriendo. */

    /* Lo que realmente queremos hacer: */

    border: 1px solid gray;
    border-radius: 10px;
}

.project-details{
    width: 500px;
}

.project-image{
    width: 500px;
}

.header{
    padding-top: 0.1px;
    background-color: #060606;
    color: white;

    /* Se recomienda que el color de fondo, de la cabecera ".header", sea correspondiente al color de fondo de la imagen que uses; en este caso, del logo. Para saber con exactitud que color de fondo usar en ".header", para este caso, puedes valerte del siguiente recurso: 

    https://chrome.google.com/webstore/detail/colorpick-eyedropper/ohcpnigalekghcmgcdcenkpelffpdolg
    
    La anterior página, que realmente es una extensión de google, te dirá exactamente qué color posee, en términos de hexadecimales, cualquier imagen. */
}

.logo{
    text-align: center;

    /* Centra el contenido del contenedor. En este caso, nuestro contenedor es el elemento "figure"; entonces, como dicho elemento cubre toda la anchura de la pantalla del navegador; tenemos que, al centrar el contenido del contenedor, la imagen (logo), éste se situará sobre toda la mitad de la pantalla del navegador realmente. */
}

.header a{
    color: white;
    text-decoration: none;

    /* La propiedad-valor "text-decoration: none" le quita el formato al contenido textual; eso incluye, por supuesto, los "underline" que vienen en los enlaces por defecto.
    */
}