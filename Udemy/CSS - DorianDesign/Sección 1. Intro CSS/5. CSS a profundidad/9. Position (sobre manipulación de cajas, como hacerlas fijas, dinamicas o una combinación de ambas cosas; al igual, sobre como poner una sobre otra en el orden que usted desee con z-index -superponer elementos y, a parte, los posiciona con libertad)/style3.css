/*
    Ahora vamos a hablar del último valor que puede asumir la propiedad "position": "sticky".

    "sticky": Es una especie de mezcla entre position "relative" & "fixed". Con este tipo de posicionamiento, las propiedades "top", "left", "bottom" y "right" no sirven para mover el elemento; sino, para indicarle en qué punto pasará a tener un comportamiento de posicionamiento similar a "fixed"; hasta llegar a ese punto se comportará como si no tuviera posicionamiento, aunque sí contará como "posicionado" si necesitaramos colocar otro elemento respecto a él (absolute).
    */

    *{
        box-sizing: border-box;
    }

    body{
        margin: 0;
        background-color: #333;
        color:#fff;
    }

    img{
        width: 100%;
        height: 400px;
        display: block;
    }

    .header{
        text-align: center;
        /* padding: 25px 0; */
        background-color: lightskyblue;
        color: orangered;
        /* position: fixed;
        top: 0;
        width: 100%; */
        position: sticky;

        /* Luego de declarado position "sticky" ya podrá usar las propiedades consecuentes: "top", "left", "bottom" y "right". Sin embargo, asumen un comportamiento diferente (como ya lo planteamos más arriba). Supongamos que a nuestro ".header" queremos darle un "top" de 0 (luego de declarar "position: sticky"); eso significa que, en el momento en que el ".header" llegue a la parte más "arriba" de la pantalla disponible para el navegador (y ahí se mantenga, atención a esto); el ".header" en cuestión se quedará fijado en dicha posición, pegado sobre toda la pantalla del navegador (sin movilidad extra alguna, tal como lo hace "fixed"). Probemos con un top de "3px" para hacer el ejemplo más visible. */

        top: 3px;

        /* Ahora, antes de relegar al ".header" a una posición fija sobre toda la pantalla del navegador, por medio del "top: 5px" definido, usted se dará cuenta que el ".header" asume un comportamiento similar a position "relative"; pues, el selector no se queda estacionado fijamente sobre ningún lado de la pantalla. Es por lo anterior que esta propiedad tiene la fama de ser una combinación entre position "relative" & position "fixed". */
    }

        /* Utilidad: Por lo general su uso consiste en definir varios elementos, comúnmente "títulos", con una misma clase; de tal manera que, dicha clase conforme un selector en CSS y se le coloque a todas por igual, en un sólo "pasón", la propiedad-valor: "position: sticky".

        Lo que acontecerá es que, apenas el contenido del elemento, en este caso cada uno de los "títulos", se agote... hasta ahí se evidenciará el efecto de "sticky"; pero, si la hoja de HTML continua con su trayectoria hasta abordar un nuevo "título", entonces, dicho nuevo "título", pasará a ser el nuevo elemento fijado por la página; dando la sensación de que habrán títulos fijos, de manera parcial, en la medida de que se vaya desenvolviendo la página web. 
        
        pd: Trate siempre de que los elementos que quiera fijar con position "sticky", y que quiera que sean afectados de la misma manera; sean elementos que contengan, por atributo "class", un mismo valor; y, adicionalmente, que sean elementos totalmente independientes entre sí; es decir, más puntualmente, que ninguno contenga al otro. Tal que así, veamos:
        */
        
    .article-title{
        position: sticky;
        top: 0;
        background-color: #333;

        /* Se define un "background-color", color de fondo, a cada uno de los títulos fijados para que su contenido textual no choque con el contenido textual de cada uno de sus párrafos al pasar por ellos; y, así, no se dificulte la lectura de quien visualiza la página ni se confunda */

        margin: 0;
        outline: 3px solid red;

        /* propiedades decorativas */
    }

        /* IMPORTANTE: Ahora, un detalle, en ocasiones para que funcione "sticky" siempre se debe declarar esta propiedad-valor sobre el elemento padre o contenedor del elemento que realmente queremos que se vea afectado; es decir, si se fija bien, el elemento afectado directamente es la barra de menu "nav" (no propiamente el "header"); dicha barra de menu, como ya lo mencionamos, realmente está declarada en la etiqueta "nav" con clase "menu"; y, adicionalmente, está siendo contenida por una etiqueta padre "header" con clase "header" también (que es, de hecho, la que estamos usando como selector en nuestro caso de ejemplo actual, y no es coincidencia; pues, es necesario que sea así para poder afectar al elemento hijo, el de nuestro interés, "nav" por medio de "position: sticky"). Esto pasa porque el selector como tal, a veces, no tiene el "alto" suficiente en su contenido como para generar un "scroll".
        
        Otro detalle: si dentro del selector que le está aplicando la propiedad-valor: "position: sticky", declara también la propiedad "overflow" con un valor diferente a "visible",... la propiedad-valor: "position: sticky" dejará de funcionar. */
    
