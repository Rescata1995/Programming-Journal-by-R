*{
    box-sizing: border-box;
}

[class^="bg-"] {
    display: flex;
    flex-wrap: wrap;

    /* De momento, por un tema de mera necesidad, hemos usado dos propiedades relacionadas con "flex"; sin embargo, no hemos trabajado con "flex" aún; entonces, simplemente ignorelo. 
    */

    width: 30%;
    margin: 0 auto;
    height: 150px;
    border: 1px solid red;
}

body{
    padding-bottom: 50em;
    text-align: center;
}

.bg-color{
    background-color: red;

    /* Lo que ya sabe, le pone un color al fondo (no al content, al fondo del "content") 
    */
}

.bg-image{
    background-image: url(Rescata.jpg);

    /* Por medio de la función "url()" se coloca, como parametro, la ruta de una imagen con la intención de ser importada y, posteriormente, ser colocada como fondo 
    
    dato: a la función url() sólo fue necesario pasarle, como parametro, el nombre preciso de la imagen; pues, acontece que esta hoja de estilos "style.css" se encuentra situada sobre el mismo directorio de la imagen importada: "Rescata.jpg" */
} 

/* Ahora, generalmente la propiedad "background-image" se debe complementar con la propiedad "background-size"; pues la imagen, por defecto, no suele establecerse con las medidas requeridas para encajar (perfectamente) sobre nuestro fondo; el cual usualmente resulta ser un "div" con un tamaño exacto. 

Entonces, para este caso, "background-size" tiene la labor de establecer el tamaño de la imagen de fondo; esta propiedad puede asumir 4 valores posibles para definir tamaños de fondo; tal que así:

    1. x [y];, "x" e "y" son valores numéricos pasados (de elección propia), donde "x" establece la medida para el eje de las "x" e "y" establece la medida para el eje de las "y". El eje "y" es opcional y si no se coloca se calcula automaticamente. Se define con valores numéricos absolutos (en términos de pixeles) o también con términos porcentuales; para propositos de "responsive" (lo ideal), use siempre términos porcentuales para definir el "size" de esta manera.

    2. "auto";, son las medidas por defecto de la propiedad "background-size" (es como no poner nada).

    3. "cover";, cubre la caja por completo, aunque la imagen escape del contenedor (del espacio de fondo disponible del selector): dejando abierta la posibilidad de que no se visualice completamente.

    4. "contain";, se ajusta al contenedor, y si queda algún pequeño espacio libre, el fondo pasado se multiplica sobre todo el fondo del selector; pero, importante, nunca se le escapará ni un poco alguna parte del fondo pasado; con "cover" sí.
*/

.bg-size{
    background-image: url(Rescata.jpg);
    background-size: 50% 50%;
    

    /* Se llama a la propiedad "background-size" y se define uno de los cuatro (4) valores posibles para dicho fondo; el cual, ha sido rellenado con una imagen (o con copias de la misma imagen, quien sabe). Probemos.
    
    Partiendo del 1er modelo, si le asignamos valores porcentuales tanto a "x" como a "y"; tendríamos como resultado que, la definición de un "ancho" y un "alto" se dará con relación a la medida del selector que ha importado la imagen; es decir, supondríamos que el selector en sí ya tiene unas medidas de 100% de ancho y 100% de alto. 
    
    Por ejemplo, si tenemos que "background-size: 50% 50%;", tendríamos que la imagen importada ocupará, por cada copia de imagen plasmada en el fondo, un "ancho" y un "alto" equivalente a la mitad de espacio total disponible que nos asegura el selector para cada respectivo lado (quedando de sobra un espacio restante). 
    
    Ese espacio restante, por defecto, se ocupa por copias de la misma imagen que se extienden hasta cubrir toda la medida del selector en sí (todo su fondo); sin embargo, en caso que uno no quisiera que se replique la imagen, por más que haya aún espacio disponible para ocupar en el fondo en cuestión, podemos hacer uso de la propiedad-valor: "background-repeat: no-repeat;", pero es algo que ya veremos más adelante.
    */

    /* Sin embargo, aún no terminamos con la propiedad: "background-size". "background-size" también puede recibir un valor de: "cover". Con el valor "cover" se cubre la caja (el fondo del selector) por completo; sin embargo, se cuenta con el riesgo de que la imagen de fondo pasada (o el fondo en sí que se le haya pasado) se escape del contenedor, del fondo disponible del selector (no salga completamente); es decir, en caso de que no entrará la imagen por completo, algunas partes de la misma se omitirían (con tal de que se ocupe todo el fondo). Veamos. */

    background-size: cover;

    /* Ahora, en caso que la propiedad "background-size" reciba el valor de: "contain",... ya sabe lo que acontecerá */

    background-size: contain;
} 

.bg-repeat{
    background-image: url(Rescata.jpg);
    background-size: 20%;

    /* Recuerda esto: "... ese espacio restante, por defecto "background-repeat: repeat;", se ocupa por copias de la misma imagen que se extienden hasta cubrir toda la medida del selector en sí (todo su fondo); sin embargo, en caso que uno no quisiera que se replique la imagen, por más que haya aún espacio disponible para ocupar en el fondo en cuestión, podemos hacer uso de la propiedad-valor: "background-repeat: no-repeat;"... */

    background-repeat: no-repeat;

    /* En efecto, deja de reproducirse la imagen; ahora, en caso que sólo desee que se reproduzca por sobre el eje de las "y", tendría que definir el valor: "repeat-y". 
    
    Contrario a eso, si sólo desea que se reproduzca por todo el eje de las "x", sería definir el valor con: "repeat-x". 
    */
}

/* Ahora vamos a hablar de "background-position", esta propiedad establece la posición de la imagen; o en su defecto, del "fondo" seleccionado para ubicarse sobre el fondo del selector en cuestión. Adicionalmente, esta propiedad se define con dos valores; en caso que no se especifique un segundo valor, este valor automaticamente será "center". Acá la lista de los valores posibles: 

    left top;
    left center;
    left bottom;
    right top;
    right center;
    right bottom;
    center top;
    center center;
    center bottom;
    top center;
    top left;
    top right;

    Estos últimos valores son los más comunes (lo normal es usar estos).

    x-% y-%; (recibe % en el eje "x" e "y").
    x-pos y-pos; (recibe también "px" o "em", etc).

    Estas últimas medidas se calculan a partir de las medidas originales del contenedor; es decir, de las medidas propias al selector; que, usualmente, hace de "caja". Recuerde que, de hecho, el "porcentaje" es una medida relativa en CSS que establece una longitud referente al tamaño de los elementos "padre". Con relación al "alto" y "ancho" del selector propio es que se basarán las medidas de "posición" para ser establecidas.

    initial;
    inherit;

    Estos dos últimos tienen más sentido cuando se trabaja con animaciones o con efectos.
*/

.bg-position{
    background-image: url(Rescata.jpg);
    background-size: 10%;
    background-repeat: no-repeat;
    background-position: top right;
}

/* Ahora vamos a hablar de "background-clip", con el cual se decide hasta donde se va a extender el fondo del selector; nos queremos referir, por lo general, al fondo que uno pasa (al fondo pasado); ya sea una imagen o un color. El valor de "border-box" es el valor que tiene por defecto la propiedad "background-clip" (el mismo que se asume si no se declara, incluso, a la propiedad como tal en sí).

Pero "border-box" consiste, en teoría, que el fondo pasado va a cubrir, incluso, el borde; es decir, el fondo pasado llegará hasta el último límite del borde.

Ahora, otro valor posible para esta propiedad es: "padding-box"; éste significa que, el fondo pasado al selector, sólo cubrirá hasta el último límite del padding; es decir, se dejaría por fuera al border (por fuera del formato propio al fondo pasado, al "bakcground" pasado). Para que se entienda mejor: el borde no estaría incluido en el "background", sólo llegaría hasta el padding.

Por último, está también el valor: "content-box" que significa que el fondo pasado al selector sólo cubriría el content del box model. Tenga en cuenta que el "padding" con el "content" suelen confundir; en caso que desee ver visualmente la diferencia entre ambos, dé un "padding" a priori al selector.

En general, lo que hace la propiedad "background-clip" es establecer en qué parte de la caja (box model) se va a configurar nuestro fondo o "background" pasado.
*/

.bg-clip{
    padding: 20px;
    border: 10px dotted red;
    background-color: blue;
    background-clip: content-box;
}

/* Ahora, vamos a hablar de "background-origin". "background-origin" hace lo mismo que "background-clip"; sólo que, con "background-origin", el fondo pasado al selector como "background", sea un color o una imagen (aunque esto es más perceptible con imagenes), tiene su origen o empieza a dibujarse desde el límite mismo que uno le determine en "background-origin" por medio de los valores que usted ya conoce: "content-box", "padding-box" & "border-box"; y no necesariamente, ni en todos los casos, desde la esquina propia más lejana de la caja. 

Con "content-box", por ejemplo, suponiendo que el fondo pasado como "background" es una imagen, la imagen de fondo como tal se empezaría a dibujar desde la esquina de inicio del contenido mismo (content) de la caja, y no desde el límite de la esquina propia del inicio de la caja como tal (no desde su esquina más lejana); es decir, desde su borde (como sí pasa con "background-clip"). 

Con "background-clip" la imagen se empezaría a dibujar desde su borde (border), sí, pero como estamos suponiendo que el valor pasado fue: "content-box"; lo que se vería realmente de la imagen, como fondo pasado, se vería solamente desde el "content" de la caja,... sin embargo no se vería todo el recorrido de imagen que ya viene cargada desde el borde de la caja misma. Contrario a "background-clip", con "background-origin", para este mismo caso, la imagen estaría siendo cargada puntualmente desde el "content" y no desde el "border".

Entonces, en resumen, "background-clip" recorta y "background-origin" redimensiona a la hora de, ambos, configurar hasta dónde va a llegar el fondo pasado al selector dentro de su box model.
*/

.bg-origin{
    background-origin: content-box;
    border: 10px dotted red;
    padding: 25px;
    background-image: url(Rescata.jpg);
    background-size: contain;
    background-repeat: no-repeat;
}

.bg-attachment{
    width: 100%;
    height: 400px;
    background-image: url(Rescata.jpg);
    background-size: contain;
    background-attachment: fixed;

    /* El valor "scroll" es el valor por defecto de la propiedad: "ackground-attachment". El fondo pasado al selector, como "background", se queda estatico por más que nos desplazemos con scroll vertical a lo largo de la página web; sin embargo, con el valor "fixed", podríamos hacer que la imagen se desplaze verticalmente a la par con el desplazamiento de la página hecho con "scroll" a lo largo de la página misma; se va a desplazar el fondo pasado al selector también, sí, pero dentro del selector mismo (dentro de su espacio disponible).
    
    Este efecto visual es más perceptible si el valor de la propiedad "background-size" es "cover" (aunque con "contain" también corre muy bien y el fondo pasado al selector se ve más nitido) y, de nuevo, si estamos trabajando con imagenes como "fondo pasado". Pero puntualmente con "cover", como bien se recuerda, el fondo pasado al selector se escapa del contenedor si no logró ser cubierto completamente sobre el mismo; entonces, en ese orden de ideas, "background-attachment: fixed" le da la facultad de mostrar el resto de la imagen (o fondo pasado al selector) que quedó por fuera del contenedor; esto se da en la medida que se desplaza con "scroll", hacia arriba y hacia abajo, la página web que visualiza. Este efecto visual recibe el nombre de: "Efecto Parallax" y, dentro de CSS, solamente se consigue declarando la siguiente línea: "background-attachment: fixed;"
    
    "background-attachment: fixed" logra este efecto porque, ese valor de la propiedad, "fixed", es relativo al "viewport". 
    
    Ahora, en términos generales, "background-attachment" como propiedad, le permite establecer si el fondo se coloca respecto a la caja ("scroll") o al viewport ("fixed"). 
    */
}

/* Por último, vamos a hablar acerca de los "fondos multiples"; es decir, la facultad de poder establecer más de un "fondo pasado" en una caja (No es una propiedad de "background" propiamente, sino un truco para poder poner varios "background" dentro de una misma caja).
*/

.bg-multiple{
    width: 100%;
    height: 1000px;
    background-image:  
        url(Rescata.jpg),
        url(re.jpg);
        

        /* Toda imagen que desee incorporar como fondo, dentro de una misma caja, debe llamarla por medio de la función "url" y separar a cada una por medio de comas (,) IMPORTANTE.
        
        Luego, la última imagen llamada, debe cerrar con punto y coma (;), como ya se imagina. 

        Ahora bien, aparentemente, sólo se ve una imagen de fondo; esto es así porque la primera imagen importada se impone sobre las demás que han sido llamadas; es decir, los demás fondos pasados están por debajo del primer fondo importado (y eso, a veces, puede tapar todos los demás fondos llamados puestos posteriormente al primero); sin embargo, todo esto puede cambiar para bien al usar propiedades de tipo "background" con valores independientes para cada fondo pasado al selector. Veamos.
        */

        background-size: 20%, cover;

        /* Lo anterior significa que, en términos de "background-size"; el primer fondo pasado como selector, "Rescata.jpg", tendrá un "background-size" de 10%; mientras, el segundo fondo pasado como selector, "re.jpg", tendrá un "background-size" definido como "contain". Esa es la lógica que se maneja para darle un valor particular, segun una propiedad del "background", a cada uno de los fondos pasados dentro de una misma caja,... para asignarles un valor por separado a cada una de las imagenes importadas (se separa en comas también y se sigue el orden en el que han sido llamados cada uno de los fondos pasados, con "background-image", al mismo selector o caja).

        Ahora si por ejemplo deseamos pasarle un mismo valor, de una propiedad del "background", a todos los fondos llamados y contenidos en una misma caja o selector, sólo es necesario definir una vez el valor en cuestión como se define de forma convencional. Tal que así: 
         */

         background-repeat: no-repeat;

         /* Sigamos como veniamos... */

         background-position: bottom right, center;

         /* Hasta aquí, por ejemplo, es que conseguimos ese efecto de "poner un logo por encima de una foto"; si se da cuenta, realmente ambos son dos imagenes inportadas y pasadas como fondos dentro de un mismo selector. */

         /* Ahora, inventemos un poco... */

         background-attachment: scroll, fixed;
}